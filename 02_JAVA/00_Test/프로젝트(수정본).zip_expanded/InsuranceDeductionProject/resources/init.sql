DROP TABLE MEMBER;
CREATE TABLE MEMBER(
 USER_ID NUMBER PRIMARY KEY,
 ID VARCHAR2(30) NOT NULL,
 USER_PASS VARCHAR2(30) UNIQUE NOT NULL,
 USER_NAME VARCHAR2(20) NOT NULL,
 PERSONAL_INFO VARCHAR2(30) NOT NULL UNIQUE,
 ADDRESS VARCHAR2(30) NOT NULL,
 PHONE VARCHAR2(30),
 DRIVE_CAREER NUMBER,
 USER_CAR NUMBER REFERENCES CAR(CAR_ID),
 COMPANY_ID NUMBER REFERENCES COMPANY(COMPANY_ID),
 ENROLL_DATE DATE DEFAULT SYSDATE,
 ACCIDENT_COUNT NUMBER NOT NULL
);
DROP SEQUENCE MEMBER_SEQ;
CREATE SEQUENCE MEMBER_SEQ
START WITH 1
INCREMENT BY 1;
DROP TABLE COMPANY;
DROP TABLE COMPANY;
CREATE TABLE COMPANY(
 COMPANY_ID NUMBER PRIMARY KEY,
 COMPANY_NAME VARCHAR2(30) UNIQUE,
 COMPANY_PHONE VARCHAR2(30),
 DEDUCTION_FEE NUMBER NOT NULL
);
CREATE SEQUENCE COMPANY_SEQ
START WITH 1
INCREMENT BY 1;
DROP TABLE DRIVE_WEIGHT;
CREATE TABLE DRIVE_WEIGHT(
 DW_ID NUMBER PRIMARY KEY,
 COMPANY_ID NUMBER REFERENCES COMPANY(COMPANY_ID),
 CAR_ID NUMBER REFERENCES CAR(CAR_ID),
 EXPERIENCE_MIN NUMBER CHECK(EXPERIENCE_MIN>=0) NOT NULL,
 EXPERIENCE_MAX NUMBER NOT NULL,
 DW_WEIGHT_SCORE NUMBER,
 UNIQUE (COMPANY_ID, CAR_ID, EXPERIENCE_MIN, EXPERIENCE_MAX),
 CHECK(EXPERIENCE_MAX>=EXPERIENCE_MIN)
);
DROP TABLE ACCIDENT_WEIGHT;
CREATE TABLE ACCIDENT_WEIGHT(
 AW_ID NUMBER PRIMARY KEY,
 COMPANY_ID NUMBER REFERENCES COMPANY(COMPANY_ID),
 CAR_ID NUMBER REFERENCES CAR(CAR_ID),
 ACCDIENT_MIN NUMBER CHECK(ACCDIENT_MIN>=0) NOT NULL,
 ACCDIENT_MAX NUMBER NOT NULL,
 AW_WEIGHT_SCORE NUMBER,
 UNIQUE (COMPANY_ID, CAR_ID, ACCDIENT_MIN, ACCDIENT_MAX),
 CHECK(ACCDIENT_MAX>=ACCDIENT_MIN)
);
DROP TABLE CAR;

CREATE TABLE CAR(
 CAR_ID NUMBER PRIMARY KEY,
 CAR_NAME VARCHAR2(30)
);
CREATE TABLE AMOUNT(
 AMOUNT_ID NUMBER PRIMARY KEY,
 USER_ID REFERENCES MEMBER(USER_ID)  ON DELETE CASCADE,
 PAY_FEE NUMBER, -- 납부 해야 할 보험비용
 INPUT_FEE NUMBER, --  납입한 금액
 REST_FEE NUMBER CHECK(REST_FEE>=0), -- 남은 비용
 FAIL_COUNT NUMBER  CHECK(FAIL_COUNT<6), -- 완납 실패 횟수
 STATUS VARCHAR2(30) CHECK (STATUS IN ('Y', 'N'))  -- 납부상태
);
DROP TABLE AMOUNT;
CREATE SEQUENCE AMOUNT_SEQ
START WITH 1
INCREMENT BY 1;
